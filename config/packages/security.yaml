security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
            cost: 15
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
        # users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
            entry_point: jwt
            ### auth/json_login ###
            json_login:
                check_path: /api/auth/login
                username_path: userIdentifier
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
            ### auth/refresh_jwt ###
            refresh_jwt:
                check_path: /api/auth/refresh_token
            ### auth/login_throttling ###
            login_throttling:
                max_attempts: 5
                interval: '15 minutes'
            ### auth/logout ###
            logout:
                path: api_auth_logout
            custom_authenticators:
                - App\Security\GoogleAuthenticator
            ### auth/two_factor ###
            # two_factor:
            #     auth_form_path: 2fa_login    # The route name you have used in the routes.yaml
            #     check_path: 2fa_login_check  # The route name you have used in the routes.yaml

    access_control:
        - { path: ^/api/auth/(login|refresh_token), roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon   
